[{"C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\index.js":"1","C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\reportWebVitals.js":"2","C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\App.js":"3","C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\Root.jsx":"4","C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\Historico.jsx":"5","C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\GestionarCuentas.jsx":"6","C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\Login.jsx":"7","C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\Header.jsx":"8","C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\Inventario.jsx":"9","C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\RegistroTipoObjeto.jsx":"10","C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\serverAPI\\mineraServer.js":"11"},{"size":600,"mtime":1670847067414,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1670279833137,"results":"14","hashOfConfig":"13"},{"size":890,"mtime":1671336782653,"results":"15","hashOfConfig":"13"},{"size":1097,"mtime":1671336782655,"results":"16","hashOfConfig":"13"},{"size":160,"mtime":1670847067412,"results":"17","hashOfConfig":"13"},{"size":11600,"mtime":1672021723449,"results":"18","hashOfConfig":"13"},{"size":975,"mtime":1671416681575,"results":"19","hashOfConfig":"13"},{"size":1646,"mtime":1671415742281,"results":"20","hashOfConfig":"13"},{"size":13835,"mtime":1671416749987,"results":"21","hashOfConfig":"13"},{"size":6925,"mtime":1671415801466,"results":"22","hashOfConfig":"13"},{"size":5321,"mtime":1671336782656,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7q1qvq",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\index.js",[],[],"C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\reportWebVitals.js",[],[],"C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\App.js",[],[],"C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\Root.jsx",[],[],"C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\Historico.jsx",[],[],"C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\GestionarCuentas.jsx",["59"],["60","61"],"C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\Login.jsx",[],[],"C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\Header.jsx",[],[],"C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\Inventario.jsx",["62"],["63","64","65","66"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nimport * as ServerMinera from './serverAPI/mineraServer'\r\n\r\nimport { Button } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport { FloatingLabel } from 'react-bootstrap';\r\nimport { Toast } from 'react-bootstrap';\r\n\r\nconst toastIngresoExitoso = () => {\r\n    <Toast>\r\n        <Toast.Header>\r\n            <img src=\"holder.js/20x20?text=%20\" className=\"rounded me-2\" alt=\"\" />\r\n            <strong className=\"me-auto\">Bootstrap</strong>\r\n            <small>11 mins ago</small>\r\n        </Toast.Header>\r\n        <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\r\n  </Toast>\r\n}\r\n//Se recibe un props en caso de que este sea necesario, esto, sirve para poder actualizar los datos correctamente. El props se envia desde Root.jsx\r\nexport const Inventario = () => {\r\n    const params = useParams();\r\n    // eslint-disable-next-line\r\n\r\n    //Se usa para obtener los datos del json que sostienen los objetos\r\n    const [objetos, setObjetos] = useState([]);\r\n\r\n    // eslint-disable-next-line \r\n    const [tiposObjeto, setTiposObjeto] = useState([]);\r\n\r\n    const listarObjetos = async () =>{\r\n        try {\r\n            const res = await ServerMinera.listarObjetos();\r\n            const datos = await res.json();\r\n            //console.log(datos); Esto llama al json a la consola para checkear\r\n            //Renderiza los elementos encontrados.\r\n            setObjetos([...datos.objetos]); //aqui se utiliza el nombre que tiene el archivo json, ese mismo nombre, debe ponerse en el arreglo con setNombreVariable\r\n            console.log(datos.objetos)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const sacarTiposObjeto = async () =>{\r\n        try {\r\n            const res = await ServerMinera.listarTiposObjeto();\r\n            const datos = await res.json();\r\n            console.log(datos); //Esto llama al json a la consola para checkear\r\n            //Renderiza los elementos encontrados.\r\n            setTiposObjeto([...datos.tiposObjeto]); //aqui se utiliza el nombre que tiene el archivo json, ese mismo nombre, debe ponerse en el arreglo con setNombreVariable\r\n            console.log(datos.tiposObjeto)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    //Llama a listar objetos para que pueda ser desplegado en la tabla.\r\n    useEffect( () => {\r\n        listarObjetos();\r\n    },[]);\r\n\r\n    useEffect( () => {\r\n        sacarTiposObjeto();\r\n    },[]);\r\n\r\n    //Se establece el estado inicial del Objeto a la hora de querer agregarlo a la base de datos.\r\n    const estadoObjetoInicial = {idObjeto:0,nombre:\"\",cantidad:1,descripcion:\"\",prestatario:\"\",id_tipo_id:\"\"};\r\n    \r\n    const estadoTipoObjetoInicial = {id_tipo:0, nombre_tipo:''};\r\n\r\n    //Hook que hace que a objeto y setObjeto tenga el estado de uso del estado inicial del objeto.\r\n    const [objeto, setObjeto] = useState(estadoObjetoInicial);\r\n\r\n    // eslint-disable-next-line \r\n    const [tipoObjeto, setTipoObjeto] = useState(estadoTipoObjetoInicial)\r\n\r\n    //Hook que verifica si los datos dentro de las inputs han cambiado o no.\r\n    const manejarCambiosEntrada = (e) => {\r\n        console.log(e.target.name);\r\n        setObjeto({ ...objeto,[e.target.name]: e.target.value });\r\n    }\r\n\r\n    //Hook que maneja a donde van a parar los datos al presionar el boton registrar objeto.\r\n    const manejarSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if(e.target[5].name === 'btnActualizar'){\r\n            await ServerMinera.actualizarObjeto(objeto.idObjeto,objeto);\r\n            console.log(\"Actualizando\")\r\n        }else{\r\n            await ServerMinera.registrarObjeto(objeto);\r\n            console.log(\"Registrando\")\r\n            \r\n        }\r\n\r\n        window.location.reload();\r\n        toastIngresoExitoso()\r\n        \r\n    }\r\n\r\n    const borrarRegistro = async (idObjeto) => {\r\n        //console.log(idObjeto); Para verificar la recuperacion de la id a la hora de presionar el boton de borrado.\r\n        //Espera a que reciba la respuesta de la api al mandarle la id del objeto, si la encuentra, borrara el dato solicitado a borrar.\r\n        //const opcion = confirm(`Esta seguro que desea borrar el objeto de ID: ${idObjeto}?`);\r\n        //console.log(opcion);\r\n\r\n        await ServerMinera.borrarObjeto(idObjeto);\r\n        //Renderiza la lista nuevamente\r\n        listarObjetos();\r\n    }\r\n\r\n    const handleEditar = (objeto)=>{\r\n        setObjeto(objeto)\r\n    }\r\n    \r\n    const obtenerObjeto = async (idObjeto) => {\r\n        try {\r\n            const res = await ServerMinera.obtenerObjeto(idObjeto);\r\n            const datos = await res.json();\r\n            console.log(\"--------\")\r\n            console.log(datos); //Para verificar a traves de consola si se obtienen los datos del boton presionado.\r\n            const { nombre, cantidad, descripcion, prestatario, id_tipo_id } = datos.objeto;\r\n            setObjeto({ nombre, cantidad, descripcion, prestatario, id_tipo_id });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (params.id) {\r\n            obtenerObjeto(params.id)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    {document.body.style = 'background: #ededeb;'};\r\n    return (\r\n        <>\r\n        <br />\r\n        <div id='tituloInventario' className='text-center'>\r\n            {\r\n                objeto.idObjeto>0?(\r\n                        <h1>\r\n                            Actualizando Objeto\r\n                        </h1>\r\n                    ) : (\r\n                        <h1>\r\n                            Agregar Objeto\r\n                        </h1>\r\n                )\r\n            }\r\n        </div>\r\n        <br />\r\n            <form onSubmit={manejarSubmit}>\r\n                <div id='campoNombre'>\r\n                    <Form.Group>\r\n                        <FloatingLabel\r\n                            controlId = 'floatingNombreObjeto'\r\n                            label = \"Nombre Objeto\"\r\n                            className = 'mb-3'\r\n                        >\r\n                            <Form.Control name='nombre' type='text' placeholder='Ej: Muelas Chancador' defaultValue={objeto.nombre} onChange={manejarCambiosEntrada}/>\r\n                        </FloatingLabel>\r\n                    </Form.Group>\r\n                </div>\r\n                <div id='campoCantidad'>\r\n                    <Form.Group>\r\n                        <FloatingLabel\r\n                            controlId = 'floatingCantidad'\r\n                            label = \"Cantidad\"\r\n                            className = 'mb-3'\r\n                        >\r\n                            <Form.Control name='cantidad' type='number' placeholder='Ej: 2' defaultValue={objeto.cantidad} onChange={manejarCambiosEntrada}/>\r\n                        </FloatingLabel>\r\n                    </Form.Group>\r\n                </div>\r\n                <div id='campoDescripcion'>\r\n                    <Form.Group>\r\n                        <FloatingLabel\r\n                            controlId = 'floatingDescripcion'\r\n                            label = \"Descripcion\"\r\n                            className = 'mb-3'\r\n                        >\r\n                            <Form.Control name='descripcion' type='text' placeholder='Ej: yadayadayadayadayadayada' defaultValue={objeto.descripcion} onChange={manejarCambiosEntrada}/>\r\n                        </FloatingLabel>\r\n                    </Form.Group>\r\n                </div>\r\n                <div id='campoPrestatario'>\r\n                    <Form.Group>\r\n                        <FloatingLabel\r\n                            controlId = 'floatingPrestatario'\r\n                            label = \"Prestatario\"\r\n                            className = 'mb-3'\r\n                        >\r\n                            <Form.Control name='prestatario' type='text' placeholder='Ej: Jaimito El Cartero' defaultValue={objeto.prestatario} onChange={manejarCambiosEntrada}/>\r\n                        </FloatingLabel>\r\n                    </Form.Group>\r\n                </div>\r\n                <div id='campoIdTipoObjeto'>\r\n                    <Form.Group>\r\n                        {/*\r\n                        TODO: Aca hace falta revisar para que las ID aparezcan a traves del dropdown select, se logro con la de objeto pero no tengo\r\n                        ni la mas remota idea si es que debo sacar esos datos de la otra tabla a traves de un fetch, de ser asi el caso, como puedo hacer para\r\n                        que esos datos se ingresen en la otra tabla? \r\n\r\n                        <Form.Select defaultValue={objeto.id_tipo_id} onChange={manejarCambiosEntrada}>\r\n                            <option value=\"\">Seleccione el tipo de objeto...</option>\r\n                            {tiposObjeto.map(tipoObjeto => (\r\n                                <option value={tipoObjeto.id_tipo} key={objeto.id_tipo_id}>{tipoObjeto.nombre_tipo}</option>\r\n                            )\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                        */}\r\n                        <FloatingLabel\r\n                            controlId = 'inTipoObjeto'\r\n                            label = \"ID Tipo Objeto\"\r\n                            className = 'mb-3'\r\n                        >\r\n                            <Form.Control name='id_tipo_id' type='text' placeholder='Ej: 2 - Herramienta' defaultValue={objeto.id_tipo_id} onChange={manejarCambiosEntrada}/>\r\n                        </FloatingLabel>\r\n                    </Form.Group>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    {\r\n                        objeto.idObjeto>0?(\r\n                            <Button variant='primary' type='submit' name=\"btnActualizar\">\r\n                            ACTUALIZAR OBJETO <i class=\"bi bi-pencil\"/>\r\n                            </Button>\r\n\r\n                        ) : (\r\n                            <Button variant='success' type='submit' name=\"btnAgregar\">\r\n                            AGREGAR OBJETO <i className=\"bi bi-plus-circle-fill\"/>\r\n                            </Button>\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n            </form>\r\n            <br />\r\n            <div id='tituloTablaInventario'>\r\n                <h1 className='text-center'>Registros</h1>\r\n            </div>\r\n            <div id='tablaInventario'>\r\n                <table className=\"table table-striped mt-5\">\r\n                    <thead className='bg-dark text-white' id='headerTablaObjeto'>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Nombre</th>\r\n                            <th>Cantidad</th>\r\n                            <th>Descripcion</th>\r\n                            <th>Prestatario</th>\r\n                            <th>Tipo Objeto</th>\r\n                            <th>Modificar</th>\r\n                            <th>Eliminar</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody id='cuerpoTablaObjeto'>\r\n                        {objetos?.map(objeto =>\r\n                        <tr>\r\n                            <td>{objeto.idObjeto}</td>\r\n                            <td>{objeto.nombre}</td>\r\n                            <td>{objeto.cantidad}</td>\r\n                            <td>{objeto.descripcion}</td>\r\n                            <td>{objeto.prestatario}</td>\r\n                            <td>{objeto.id_tipo_id}</td>\r\n                            <td>\r\n                                <Button variant='warning' id='btnEditarObjeto' onClick={() => handleEditar(objeto)}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil-fill\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\"/>\r\n                                    </svg>\r\n                                </Button>\r\n                            </td>\r\n                            <td>\r\n                                <Button variant='danger' id='btnBorrarObjeto' onClick={() => {if(window.confirm(`ADVERTENCIA: ¿Está seguro de eliminar el objeto seleccionado? ¡Los datos borrados NO podrán ser recuperados!`))objeto.idObjeto && borrarRegistro(objeto.idObjeto)}}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash3-fill\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z\"/>\r\n                                    </svg>\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                        )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\RegistroTipoObjeto.jsx",["67"],["68"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nimport * as ServerMinera from './serverAPI/mineraServer'\r\n\r\nimport { Button } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport { FloatingLabel } from 'react-bootstrap';\r\n\r\n\r\n\r\nexport const RegistroTipoObjeto = () => {\r\n  const params = useParams();\r\n\r\n\r\n  const [tiposObjeto, setTiposObjeto] = useState([]);\r\n\r\n  const listarTiposObjeto = async () => {\r\n    try {\r\n      const res = await ServerMinera.listarTiposObjeto();\r\n      const datos = await res.json();\r\n      console.log(datos);\r\n      console.log(datos.tipos_objeto); //ESTA LINEA DEPURA SI ES QUE DATOS TIENE TIPOS OBJETO\r\n      setTiposObjeto(datos.tipos_objeto); //REVISAR LA CONSOLA Y VER COMO SE LLAMA EL JSON PARA USARLO AQUI\r\n      console.log(tiposObjeto); //ESTA LINEA DEPURA Y REVISA SI ES QUE EL ARREGLO tiposObjeto tiene guardado el json\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    listarTiposObjeto();\r\n  } // eslint-disable-next-line\r\n  , []);\r\n\r\n  const estadoTipoObjetoInicial = { id_tipo: 0, nombre_tipo: \"\" };\r\n\r\n  const [tipoObjeto, setTipoObjeto] = useState(estadoTipoObjetoInicial);\r\n\r\n  const manejarCambiosEntrada = (e) => {\r\n    setTipoObjeto({ ...tipoObjeto, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const manejarSubmit = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      if (e.target[1].name === 'btnActualizar') {\r\n        await ServerMinera.actualizarTipoObjeto(tipoObjeto.id_tipo, tipoObjeto);\r\n        console.log(\"Actualizando\")\r\n      } else {\r\n        await ServerMinera.registrarTipoObjeto(tipoObjeto);\r\n        console.log(\"Registrando\")\r\n      }\r\n      window.location.reload();\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleEditar = (tipoObjeto) => {\r\n    setTipoObjeto(tipoObjeto)\r\n  }\r\n\r\n  const borrarTipoObjeto = async (id_tipo) => {\r\n    await ServerMinera.borrarTipoObjeto(id_tipo);\r\n    listarTiposObjeto();\r\n  }\r\n\r\n  //Esto quizas tendria que eliminarse por el hecho de que ya no se busca al objeto que se esta actualizando, sino, que lo agarra directamente y luego lo manda a la base de datos.\r\n  //Lo mismo desde la linea 96 hasta la 101\r\n  const obtenerTipoObjeto = async (id_tipo) => {\r\n    try {\r\n      const res = await ServerMinera.obtenerTipoObjeto(id_tipo);\r\n      const datos = await res.json();\r\n      console.log(datos)\r\n\r\n      const { nombre_tipo } = datos.tipoObjeto;\r\n      setTipoObjeto({ nombre_tipo })\r\n      console.log(setTipoObjeto)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (params.id_tipo) {\r\n      obtenerTipoObjeto(params.id_tipo)\r\n    }\r\n    // eslint-disable-next-line\r\n  })\r\n\r\n  {document.body.style = 'background: #ededeb;'};\r\n  return (\r\n    <>\r\n    <br />\r\n      <div className='text-center' id='tituloRegistroTipoObjeto'>\r\n        {\r\n          tipoObjeto.id_tipo > 0 ? (\r\n            <h1>\r\n              Actualizar Tipo De Objeto\r\n            </h1>\r\n          ) : (\r\n            <h1>\r\n              Agregar un Tipo de Objeto.\r\n            </h1>\r\n          )\r\n        }\r\n      </div>\r\n      <br />\r\n      <form onSubmit={manejarSubmit}>\r\n        <div>\r\n          <Form.Group>\r\n            <FloatingLabel controlId='floatingNombreTipo' label='Nombre Tipo Objeto' className='mb-3'>\r\n              <Form.Control name='nombre_tipo' type='text' defaultValue={tipoObjeto.nombre_tipo} onChange={manejarCambiosEntrada} />\r\n            </FloatingLabel>\r\n          </Form.Group>\r\n        </div>\r\n        <div className='text-center'>\r\n          {\r\n            tipoObjeto.id_tipo > 0 ? (\r\n              <Button variant='primary' type='submit' name='btnActualizar'>\r\n                <i class=\"bi bi-pencil\"></i>\r\n                ACTUALIZAR TIPO OBJETO\r\n              </Button>\r\n            ) : (\r\n              <Button variant='success' type='submit' name='btnAgregar'>\r\n                <i className=\"bi bi-plus-circle-fill\"></i>\r\n                AGREGAR TIPO OBJETO\r\n              </Button>\r\n            )\r\n          }\r\n        </div>\r\n        <form>\r\n          <br />\r\n          <div>\r\n            <h1 className='text-center'>Tipos de Objeto Registrados</h1>\r\n          </div>\r\n          <div>\r\n            <table className='table table-striped'>\r\n              <thead className='bg-dark text-white'>\r\n                <tr>\r\n                  <th>ID Tipo Objeto</th>\r\n                  <th>Nombre Tipo Objeto</th>\r\n                  <th>Modificar</th>\r\n                  <th>Eliminar</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tiposObjeto?.map(tipoObjeto =>\r\n                  <tr>\r\n                    <td>{tipoObjeto.id_tipo}</td>\r\n                    <td>{tipoObjeto.nombre_tipo}</td>\r\n                    <td>\r\n                      <Button variant='warning' id='btnEditarTipoObjeto' onClick={() => handleEditar(tipoObjeto)}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil-fill\" viewBox=\"0 0 16 16\">\r\n                          <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\" />\r\n                        </svg>\r\n                      </Button>\r\n                    </td>\r\n                    <td>\r\n                      <Button variant='danger' id='btnBorrarTipoObjeto' onClick={() => { if (window.confirm(`ADVERTENCIA: ¿Está seguro que desea eliminar el tipo de objeto seleccionado? ¡Los datos borrados NO podrán ser recuperados!`)) tipoObjeto.id_tipo && borrarTipoObjeto(tipoObjeto.id_tipo) }}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash3-fill\" viewBox=\"0 0 16 16\">\r\n                          <path d=\"M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z\" />\r\n                        </svg>\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </form>\r\n      </form>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n","C:\\Users\\Administrador\\Desktop\\appWebMineraDonaEma\\src\\components\\serverAPI\\mineraServer.js",[],["69"],{"ruleId":"70","severity":1,"message":"71","line":108,"column":5,"nodeType":"72","messageId":"73","endLine":108,"endColumn":51},{"ruleId":"74","severity":1,"message":"75","line":48,"column":7,"nodeType":"76","endLine":48,"endColumn":9,"suggestions":"77","suppressions":"78"},{"ruleId":"74","severity":1,"message":"79","line":107,"column":8,"nodeType":"76","endLine":107,"endColumn":10,"suggestions":"80","suppressions":"81"},{"ruleId":"70","severity":1,"message":"71","line":139,"column":5,"nodeType":"72","messageId":"73","endLine":139,"endColumn":51},{"ruleId":"82","severity":1,"message":"83","line":32,"column":12,"nodeType":"84","messageId":"85","endLine":32,"endColumn":23,"suppressions":"86"},{"ruleId":"82","severity":1,"message":"87","line":78,"column":12,"nodeType":"84","messageId":"85","endLine":78,"endColumn":22,"suppressions":"88"},{"ruleId":"82","severity":1,"message":"89","line":78,"column":24,"nodeType":"84","messageId":"85","endLine":78,"endColumn":37,"suppressions":"90"},{"ruleId":"74","severity":1,"message":"91","line":137,"column":8,"nodeType":"76","endLine":137,"endColumn":10,"suggestions":"92","suppressions":"93"},{"ruleId":"70","severity":1,"message":"71","line":96,"column":3,"nodeType":"72","messageId":"73","endLine":96,"endColumn":49},{"ruleId":"74","severity":1,"message":"94","line":36,"column":5,"nodeType":"76","endLine":36,"endColumn":7,"suggestions":"95","suppressions":"96"},{"ruleId":"82","severity":1,"message":"97","line":7,"column":7,"nodeType":"84","messageId":"85","endLine":7,"endColumn":29,"suppressions":"98"},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listarCuentas'. Either include it or remove the dependency array.","ArrayExpression",["99"],["100"],"React Hook useEffect has a missing dependency: 'params.idUsuario'. Either include it or remove the dependency array.",["101"],["102"],"no-unused-vars","'tiposObjeto' is assigned a value but never used.","Identifier","unusedVar",["103"],"'tipoObjeto' is assigned a value but never used.",["104"],"'setTipoObjeto' is assigned a value but never used.",["105"],"React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["106"],["107"],"React Hook useEffect has a missing dependency: 'listarTiposObjeto'. Either include it or remove the dependency array.",["108"],["109"],"'API_URL_TIPO_BODEGUERO' is assigned a value but never used.",["110"],{"desc":"111","fix":"112"},{"kind":"113","justification":"114"},{"desc":"115","fix":"116"},{"kind":"113","justification":"114"},{"kind":"113","justification":"114"},{"kind":"113","justification":"114"},{"kind":"113","justification":"114"},{"desc":"117","fix":"118"},{"kind":"113","justification":"114"},{"desc":"119","fix":"120"},{"kind":"113","justification":"114"},{"kind":"113","justification":"114"},"Update the dependencies array to be: [listarCuentas]",{"range":"121","text":"122"},"directive","","Update the dependencies array to be: [params.idUsuario]",{"range":"123","text":"124"},"Update the dependencies array to be: [params.id]",{"range":"125","text":"126"},"Update the dependencies array to be: [listarTiposObjeto]",{"range":"127","text":"128"},[1445,1447],"[listarCuentas]",[3939,3941],"[params.idUsuario]",[5295,5297],"[params.id]",[1089,1091],"[listarTiposObjeto]"]