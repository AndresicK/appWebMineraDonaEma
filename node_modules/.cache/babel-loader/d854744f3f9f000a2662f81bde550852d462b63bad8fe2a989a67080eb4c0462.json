{"ast":null,"code":"const API_URL_OBJETO = \"http://127.0.0.1:8000/api/objeto/\";\nconst API_URL_TIPO_OBJETO = \"http://127.0.0.1:8000/api/tipoObjeto/\";\nconst API_URL_USUARIO = \"http://127.0.0.1:8000/api/usuario/\";\n// eslint-disable-next-line\nconst API_URL_TIPO_BODEGUERO = \"http://127.0.0.1:8000/api/tipoBodeguero/\";\n\n//API Objeto\nexport const listarObjetos = async () => {\n  return await fetch(API_URL_OBJETO);\n};\nexport const obtenerObjeto = async idObjeto => {\n  return await fetch(`${API_URL_OBJETO}${idObjeto}`);\n};\nexport const registrarObjeto = async nuevoObjeto => {\n  return await fetch(API_URL_OBJETO, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"nombre\": String(nuevoObjeto.nombre).trim(),\n      \"cantidad\": parseInt(nuevoObjeto.cantidad),\n      \"descripcion\": String(nuevoObjeto.descripcion).trim(),\n      \"prestatario\": String(nuevoObjeto.prestatario).trim(),\n      \"id_tipo_id\": parseInt(nuevoObjeto.id_tipo_id)\n    })\n  });\n};\nexport const actualizarObjeto = async (idObjeto, objetoActualizado) => {\n  return await fetch(`${API_URL_OBJETO}${idObjeto}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"nombre\": String(objetoActualizado.nombre).trim(),\n      \"cantidad\": parseInt(objetoActualizado.cantidad),\n      \"descripcion\": String(objetoActualizado.descripcion).trim(),\n      \"prestatario\": String(objetoActualizado.prestatario).trim(),\n      \"id_tipo_id\": parseInt(objetoActualizado.id_tipo_id)\n    })\n  });\n};\nexport const borrarObjeto = async idObjeto => {\n  return await fetch(`${API_URL_OBJETO}${idObjeto}`, {\n    method: 'DELETE'\n  });\n};\n\n//Api TIPO OBJETO\nexport const listarTiposObjeto = async () => {\n  return await fetch(API_URL_TIPO_OBJETO);\n};\nexport const obtenerTipoObjeto = async id_tipo => {\n  return await fetch(`${API_URL_TIPO_OBJETO}${id_tipo}`);\n};\nexport const registrarTipoObjeto = async nuevoTipoObjeto => {\n  return await fetch(API_URL_TIPO_OBJETO, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"nombre_tipo\": String(nuevoTipoObjeto.nombre_tipo).trim()\n    })\n  });\n};\nexport const actualizarTipoObjeto = async (id_tipo, tipoObjetoActualizado) => {\n  return await fetch(`${API_URL_TIPO_OBJETO}${id_tipo}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"nombre_tipo\": String(tipoObjetoActualizado.nombre_tipo).trim()\n    })\n  });\n};\nexport const borrarTipoObjeto = async id_tipo => {\n  return await fetch(`${API_URL_TIPO_OBJETO}${id_tipo}`, {\n    method: 'DELETE'\n  });\n};\n\n//API Usuarios\nexport const listarUsers = async () => {\n  return await fetch(API_URL_USUARIO);\n};\nexport const obtenerUsers = async idUsuario => {\n  return await fetch(`${API_URL_USUARIO}${idUsuario}`);\n};\nexport const registrarUser = async nuevoUsuario => {\n  return await fetch(API_URL_USUARIO, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"nombre_propietario\": String(nuevoUsuario.nombre_propietario).trim(),\n      \"apellido_propietario\": String(nuevoUsuario.apellido_propietario),\n      \"nombre_usuario\": String(nuevoUsuario.nombre_usuario).trim(),\n      \"contrasena\": String(nuevoUsuario.contrasena).trim(),\n      \"idTipo_bodeguero\": parseInt(nuevoUsuario.idTipo_bodeguero)\n    })\n  });\n};\nexport const actualizarUser = async (idUsuario, usuarioActualizado) => {\n  return await fetch(`${API_URL_USUARIO}${idUsuario}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"nombre_propietario\": String(usuarioActualizado.nombre_propietario).trim(),\n      \"apellido_propietario\": String(usuarioActualizado.apellido_propietario),\n      \"nombre_usuario\": String(usuarioActualizado.nombre_usuario).trim(),\n      \"contrasena\": String(usuarioActualizado.contrasena).trim(),\n      \"idTipo_bodeguero\": parseInt(usuarioActualizado.idTipo_bodeguero)\n    })\n  });\n};\nexport const borrarUser = async idUsuario => {\n  return await fetch(`${API_URL_USUARIO}${idUsuario}`, {\n    method: 'DELETE'\n  });\n};","map":{"version":3,"names":["API_URL_OBJETO","API_URL_TIPO_OBJETO","API_URL_USUARIO","API_URL_TIPO_BODEGUERO","listarObjetos","fetch","obtenerObjeto","idObjeto","registrarObjeto","nuevoObjeto","method","headers","body","JSON","stringify","String","nombre","trim","parseInt","cantidad","descripcion","prestatario","id_tipo_id","actualizarObjeto","objetoActualizado","borrarObjeto","listarTiposObjeto","obtenerTipoObjeto","id_tipo","registrarTipoObjeto","nuevoTipoObjeto","nombre_tipo","actualizarTipoObjeto","tipoObjetoActualizado","borrarTipoObjeto","listarUsers","obtenerUsers","idUsuario","registrarUser","nuevoUsuario","nombre_propietario","apellido_propietario","nombre_usuario","contrasena","idTipo_bodeguero","actualizarUser","usuarioActualizado","borrarUser"],"sources":["C:/Users/Administrador/Desktop/appWebReact/src/components/serverAPI/mineraServer.js"],"sourcesContent":["const API_URL_OBJETO = \"http://127.0.0.1:8000/api/objeto/\";\r\n\r\nconst API_URL_TIPO_OBJETO = \"http://127.0.0.1:8000/api/tipoObjeto/\";\r\n\r\nconst API_URL_USUARIO = \"http://127.0.0.1:8000/api/usuario/\";\r\n// eslint-disable-next-line\r\nconst API_URL_TIPO_BODEGUERO = \"http://127.0.0.1:8000/api/tipoBodeguero/\";\r\n\r\n//API Objeto\r\nexport const listarObjetos = async () => {\r\n    return await fetch(API_URL_OBJETO);\r\n};\r\n\r\nexport const obtenerObjeto = async (idObjeto) => {\r\n    return await fetch(`${API_URL_OBJETO}${idObjeto}`);\r\n};\r\n\r\nexport const registrarObjeto = async (nuevoObjeto) =>{\r\n    return await fetch(API_URL_OBJETO,{\r\n        method:'POST',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n            \"nombre\":String(nuevoObjeto.nombre).trim(),\r\n            \"cantidad\":parseInt(nuevoObjeto.cantidad),\r\n            \"descripcion\":String(nuevoObjeto.descripcion).trim(),\r\n            \"prestatario\":String(nuevoObjeto.prestatario).trim(),\r\n            \"id_tipo_id\":parseInt(nuevoObjeto.id_tipo_id)\r\n        })\r\n    });\r\n};\r\n\r\nexport const actualizarObjeto = async (idObjeto, objetoActualizado) =>{\r\n    return await fetch(`${API_URL_OBJETO}${idObjeto}`,{\r\n        method:'PUT',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n            \"nombre\":String(objetoActualizado.nombre).trim(),\r\n            \"cantidad\":parseInt(objetoActualizado.cantidad),\r\n            \"descripcion\":String(objetoActualizado.descripcion).trim(),\r\n            \"prestatario\":String(objetoActualizado.prestatario).trim(),\r\n            \"id_tipo_id\":parseInt(objetoActualizado.id_tipo_id)\r\n        })\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nexport const borrarObjeto = async (idObjeto) =>{\r\n    return await fetch(`${API_URL_OBJETO}${idObjeto}`,{\r\n        method:'DELETE',\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n//Api TIPO OBJETO\r\nexport const listarTiposObjeto = async () => {\r\n    return await fetch(API_URL_TIPO_OBJETO);\r\n};\r\n\r\n\r\n\r\nexport const obtenerTipoObjeto = async (id_tipo) => {\r\n    return await fetch(`${API_URL_TIPO_OBJETO}${id_tipo}`);\r\n};\r\n\r\n\r\n\r\nexport const registrarTipoObjeto = async (nuevoTipoObjeto) =>{\r\n    return await fetch(API_URL_TIPO_OBJETO,{\r\n        method:'POST',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n            \"nombre_tipo\":String(nuevoTipoObjeto.nombre_tipo).trim()\r\n        })\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const actualizarTipoObjeto = async (id_tipo, tipoObjetoActualizado) =>{\r\n    return await fetch(`${API_URL_TIPO_OBJETO}${id_tipo}`,{\r\n        method:'PUT',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n            \"nombre_tipo\":String(tipoObjetoActualizado.nombre_tipo).trim()\r\n        })\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const borrarTipoObjeto = async (id_tipo) =>{\r\n    return await fetch(`${API_URL_TIPO_OBJETO}${id_tipo}`,{\r\n        method:'DELETE',\r\n    });\r\n};\r\n\r\n\r\n\r\n//API Usuarios\r\nexport const listarUsers = async () => {\r\n    return await fetch(API_URL_USUARIO);\r\n};\r\n\r\nexport const obtenerUsers = async (idUsuario) => {\r\n    return await fetch(`${API_URL_USUARIO}${idUsuario}`);\r\n};\r\n\r\nexport const registrarUser = async (nuevoUsuario) =>{\r\n    return await fetch(API_URL_USUARIO,{\r\n        method:'POST',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n            \"nombre_propietario\":String(nuevoUsuario.nombre_propietario).trim(),\r\n            \"apellido_propietario\":String(nuevoUsuario.apellido_propietario),\r\n            \"nombre_usuario\":String(nuevoUsuario.nombre_usuario).trim(),\r\n            \"contrasena\":String(nuevoUsuario.contrasena).trim(),\r\n            \"idTipo_bodeguero\":parseInt(nuevoUsuario.idTipo_bodeguero)\r\n        })\r\n    });\r\n};\r\n\r\nexport const actualizarUser = async (idUsuario, usuarioActualizado) =>{\r\n    return await fetch(`${API_URL_USUARIO}${idUsuario}`,{\r\n        method:'PUT',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n            \"nombre_propietario\":String(usuarioActualizado.nombre_propietario).trim(),\r\n            \"apellido_propietario\":String(usuarioActualizado.apellido_propietario),\r\n            \"nombre_usuario\":String(usuarioActualizado.nombre_usuario).trim(),\r\n            \"contrasena\":String(usuarioActualizado.contrasena).trim(),\r\n            \"idTipo_bodeguero\":parseInt(usuarioActualizado.idTipo_bodeguero)\r\n        })\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nexport const borrarUser = async (idUsuario) =>{\r\n    return await fetch(`${API_URL_USUARIO}${idUsuario}`,{\r\n        method:'DELETE',\r\n    });\r\n};\r\n"],"mappings":"AAAA,MAAMA,cAAc,GAAG,mCAAmC;AAE1D,MAAMC,mBAAmB,GAAG,uCAAuC;AAEnE,MAAMC,eAAe,GAAG,oCAAoC;AAC5D;AACA,MAAMC,sBAAsB,GAAG,0CAA0C;;AAEzE;AACA,OAAO,MAAMC,aAAa,GAAG,YAAY;EACrC,OAAO,MAAMC,KAAK,CAACL,cAAc,CAAC;AACtC,CAAC;AAED,OAAO,MAAMM,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC7C,OAAO,MAAMF,KAAK,CAAE,GAAEL,cAAe,GAAEO,QAAS,EAAC,CAAC;AACtD,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAOC,WAAW,IAAI;EACjD,OAAO,MAAMJ,KAAK,CAACL,cAAc,EAAC;IAC9BU,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;MAChB,QAAQ,EAACC,MAAM,CAACN,WAAW,CAACO,MAAM,CAAC,CAACC,IAAI,EAAE;MAC1C,UAAU,EAACC,QAAQ,CAACT,WAAW,CAACU,QAAQ,CAAC;MACzC,aAAa,EAACJ,MAAM,CAACN,WAAW,CAACW,WAAW,CAAC,CAACH,IAAI,EAAE;MACpD,aAAa,EAACF,MAAM,CAACN,WAAW,CAACY,WAAW,CAAC,CAACJ,IAAI,EAAE;MACpD,YAAY,EAACC,QAAQ,CAACT,WAAW,CAACa,UAAU;IAChD,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG,OAAOhB,QAAQ,EAAEiB,iBAAiB,KAAI;EAClE,OAAO,MAAMnB,KAAK,CAAE,GAAEL,cAAe,GAAEO,QAAS,EAAC,EAAC;IAC9CG,MAAM,EAAC,KAAK;IACZC,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;MAChB,QAAQ,EAACC,MAAM,CAACS,iBAAiB,CAACR,MAAM,CAAC,CAACC,IAAI,EAAE;MAChD,UAAU,EAACC,QAAQ,CAACM,iBAAiB,CAACL,QAAQ,CAAC;MAC/C,aAAa,EAACJ,MAAM,CAACS,iBAAiB,CAACJ,WAAW,CAAC,CAACH,IAAI,EAAE;MAC1D,aAAa,EAACF,MAAM,CAACS,iBAAiB,CAACH,WAAW,CAAC,CAACJ,IAAI,EAAE;MAC1D,YAAY,EAACC,QAAQ,CAACM,iBAAiB,CAACF,UAAU;IACtD,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAKD,OAAO,MAAMG,YAAY,GAAG,MAAOlB,QAAQ,IAAI;EAC3C,OAAO,MAAMF,KAAK,CAAE,GAAEL,cAAe,GAAEO,QAAS,EAAC,EAAC;IAC9CG,MAAM,EAAC;EACX,CAAC,CAAC;AACN,CAAC;;AAKD;AACA,OAAO,MAAMgB,iBAAiB,GAAG,YAAY;EACzC,OAAO,MAAMrB,KAAK,CAACJ,mBAAmB,CAAC;AAC3C,CAAC;AAID,OAAO,MAAM0B,iBAAiB,GAAG,MAAOC,OAAO,IAAK;EAChD,OAAO,MAAMvB,KAAK,CAAE,GAAEJ,mBAAoB,GAAE2B,OAAQ,EAAC,CAAC;AAC1D,CAAC;AAID,OAAO,MAAMC,mBAAmB,GAAG,MAAOC,eAAe,IAAI;EACzD,OAAO,MAAMzB,KAAK,CAACJ,mBAAmB,EAAC;IACnCS,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;MAChB,aAAa,EAACC,MAAM,CAACe,eAAe,CAACC,WAAW,CAAC,CAACd,IAAI;IAC1D,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAID,OAAO,MAAMe,oBAAoB,GAAG,OAAOJ,OAAO,EAAEK,qBAAqB,KAAI;EACzE,OAAO,MAAM5B,KAAK,CAAE,GAAEJ,mBAAoB,GAAE2B,OAAQ,EAAC,EAAC;IAClDlB,MAAM,EAAC,KAAK;IACZC,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;MAChB,aAAa,EAACC,MAAM,CAACkB,qBAAqB,CAACF,WAAW,CAAC,CAACd,IAAI;IAChE,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAID,OAAO,MAAMiB,gBAAgB,GAAG,MAAON,OAAO,IAAI;EAC9C,OAAO,MAAMvB,KAAK,CAAE,GAAEJ,mBAAoB,GAAE2B,OAAQ,EAAC,EAAC;IAClDlB,MAAM,EAAC;EACX,CAAC,CAAC;AACN,CAAC;;AAID;AACA,OAAO,MAAMyB,WAAW,GAAG,YAAY;EACnC,OAAO,MAAM9B,KAAK,CAACH,eAAe,CAAC;AACvC,CAAC;AAED,OAAO,MAAMkC,YAAY,GAAG,MAAOC,SAAS,IAAK;EAC7C,OAAO,MAAMhC,KAAK,CAAE,GAAEH,eAAgB,GAAEmC,SAAU,EAAC,CAAC;AACxD,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAOC,YAAY,IAAI;EAChD,OAAO,MAAMlC,KAAK,CAACH,eAAe,EAAC;IAC/BQ,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;MAChB,oBAAoB,EAACC,MAAM,CAACwB,YAAY,CAACC,kBAAkB,CAAC,CAACvB,IAAI,EAAE;MACnE,sBAAsB,EAACF,MAAM,CAACwB,YAAY,CAACE,oBAAoB,CAAC;MAChE,gBAAgB,EAAC1B,MAAM,CAACwB,YAAY,CAACG,cAAc,CAAC,CAACzB,IAAI,EAAE;MAC3D,YAAY,EAACF,MAAM,CAACwB,YAAY,CAACI,UAAU,CAAC,CAAC1B,IAAI,EAAE;MACnD,kBAAkB,EAACC,QAAQ,CAACqB,YAAY,CAACK,gBAAgB;IAC7D,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,OAAOR,SAAS,EAAES,kBAAkB,KAAI;EAClE,OAAO,MAAMzC,KAAK,CAAE,GAAEH,eAAgB,GAAEmC,SAAU,EAAC,EAAC;IAChD3B,MAAM,EAAC,KAAK;IACZC,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;MAChB,oBAAoB,EAACC,MAAM,CAAC+B,kBAAkB,CAACN,kBAAkB,CAAC,CAACvB,IAAI,EAAE;MACzE,sBAAsB,EAACF,MAAM,CAAC+B,kBAAkB,CAACL,oBAAoB,CAAC;MACtE,gBAAgB,EAAC1B,MAAM,CAAC+B,kBAAkB,CAACJ,cAAc,CAAC,CAACzB,IAAI,EAAE;MACjE,YAAY,EAACF,MAAM,CAAC+B,kBAAkB,CAACH,UAAU,CAAC,CAAC1B,IAAI,EAAE;MACzD,kBAAkB,EAACC,QAAQ,CAAC4B,kBAAkB,CAACF,gBAAgB;IACnE,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAKD,OAAO,MAAMG,UAAU,GAAG,MAAOV,SAAS,IAAI;EAC1C,OAAO,MAAMhC,KAAK,CAAE,GAAEH,eAAgB,GAAEmC,SAAU,EAAC,EAAC;IAChD3B,MAAM,EAAC;EACX,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}